structure mmFoundationTheory :> mmFoundationTheory =
struct
  val _ = if !Globals.print_thy_loads then TextIO.print "Loading mmFoundationTheory ... " else ()
  open Type Term Thm
  infixr -->

  fun C s t ty = mk_thy_const{Name=s,Thy=t,Ty=ty}
  fun T s t A = mk_thy_type{Tyop=s, Thy=t,Args=A}
  fun V s q = mk_var(s,q)
  val U     = mk_vartype
  (* Parents and ML dependencies *)
  local open fixedPointTheory indexedListsTheory patternMatchesTheory
  in end;
  val _ = Theory.link_parents
          ("mmFoundation",
          Arbnum.fromString "1503150832",
          Arbnum.fromString "309148")
          [("fixedPoint",
           Arbnum.fromString "1503148814",
           Arbnum.fromString "991596"),
           ("indexedLists",
           Arbnum.fromString "1503148856",
           Arbnum.fromString "404777"),
           ("patternMatches",
           Arbnum.fromString "1503148884",
           Arbnum.fromString "20925")];
  val _ = Theory.incorporate_types "mmFoundation" [("mmForm", 2)];

  val idvector = 
    let fun ID(thy,oth) = {Thy = thy, Other = oth}
    in Vector.fromList
  [ID("mmFoundation", "mmForm"), ID("min", "fun"), ID("min", "bool"),
   ID("pair", "prod"), ID("num", "num"), ID("ind_type", "recspace"),
   ID("bool", "!"), ID("arithmetic", "+"), ID("pair", ","),
   ID("bool", "/\\"), ID("num", "0"), ID("min", "="), ID("min", "==>"),
   ID("bool", "?"), ID("bool", "ARB"), ID("pred_set", "BIGINTER"),
   ID("pred_set", "BIGUNION"), ID("arithmetic", "BIT1"),
   ID("ind_type", "BOTTOM"), ID("mmFoundation", "Box"), ID("bool", "COND"),
   ID("ind_type", "CONSTR"), ID("bool", "DATATYPE"),
   ID("mmFoundation", "Dia"), ID("bool", "F"), ID("ind_type", "FCONS"),
   ID("pred_set", "GSPEC"), ID("bool", "IN"), ID("pred_set", "INTER"),
   ID("arithmetic", "NUMERAL"), ID("pred_set", "SUBSET"), ID("num", "SUC"),
   ID("bool", "T"), ID("bool", "TYPE_DEFINITION"), ID("pred_set", "UNION"),
   ID("pred_set", "UNIV"), ID("arithmetic", "ZERO"), ID("bool", "\\/"),
   ID("mmFoundation", "andmm"), ID("mmFoundation", "extends"),
   ID("mmFoundation", "ff"), ID("fixedPoint", "gfp"),
   ID("fixedPoint", "lfp"), ID("mmFoundation", "mmForm_CASE"),
   ID("mmFoundation", "mmForm_size"), ID("mmFoundation", "mmUpdate"),
   ID("mmFoundation", "mmfn"), ID("mmFoundation", "mmsat"),
   ID("mmFoundation", "mu"), ID("mmFoundation", "nu"),
   ID("mmFoundation", "ormm"), ID("mmFoundation", "propmm"),
   ID("mmFoundation", "satFun"), ID("mmFoundation", "tt"), ID("bool", "~")]
  end;
  local open SharingTables
  in
  val tyvector = build_type_vector idvector
  [TYV "'propvar", TYV "'action", TYOP [0, 1, 0], TYOP [2],
   TYV "'configuration", TYOP [1, 4, 3], TYOP [1, 5, 5], TYOP [1, 2, 6],
   TYOP [1, 0, 5], TYOP [1, 8, 7], TYOP [1, 0, 9], TYOP [1, 4, 5],
   TYOP [1, 1, 11], TYOP [1, 12, 10], TYOP [1, 0, 2], TYOP [1, 2, 2],
   TYOP [1, 2, 15], TYOP [1, 0, 15], TYOP [1, 2, 3], TYOP [3, 12, 8],
   TYOP [3, 4, 19], TYOP [1, 20, 18], TYOP [1, 8, 5], TYOP [1, 5, 22],
   TYOP [1, 2, 23], TYOP [1, 12, 24], TYOP [1, 5, 8], TYOP [1, 8, 26],
   TYOP [1, 0, 27], TYOP [4], TYOP [1, 2, 29], TYOP [1, 0, 29],
   TYOP [1, 31, 30], TYOP [1, 1, 29], TYOP [1, 33, 32], TYV "'a",
   TYOP [1, 2, 35], TYOP [1, 0, 36], TYOP [1, 37, 35], TYOP [1, 37, 38],
   TYOP [1, 1, 3], TYOP [1, 40, 36], TYOP [1, 41, 39], TYOP [1, 41, 42],
   TYOP [1, 2, 36], TYOP [1, 44, 43], TYOP [1, 44, 45], TYOP [1, 0, 35],
   TYOP [1, 47, 46], TYOP [1, 35, 48], TYOP [1, 35, 49], TYOP [1, 2, 50],
   TYOP [1, 8, 3], TYOP [1, 8, 52], TYOP [1, 40, 15], TYOP [3, 0, 40],
   TYOP [5, 55], TYOP [1, 56, 3], TYOP [1, 35, 3], TYOP [1, 35, 35],
   TYOP [1, 35, 59], TYOP [1, 2, 60], TYOP [1, 2, 61], TYOP [1, 2, 59],
   TYOP [1, 40, 63], TYOP [1, 0, 63], TYOP [1, 17, 3], TYOP [1, 17, 66],
   TYOP [1, 54, 67], TYOP [1, 54, 68], TYOP [1, 16, 69], TYOP [1, 16, 70],
   TYOP [1, 14, 71], TYOP [1, 2, 72], TYOP [1, 2, 73], TYOP [1, 2, 56],
   TYOP [1, 58, 3], TYOP [1, 40, 3], TYOP [1, 5, 3], TYOP [1, 0, 3],
   TYOP [1, 79, 3], TYOP [1, 77, 3], TYOP [1, 12, 3], TYOP [1, 82, 3],
   TYOP [1, 33, 3], TYOP [1, 84, 3], TYOP [1, 78, 3], TYOP [1, 47, 3],
   TYOP [1, 87, 3], TYOP [1, 52, 3], TYOP [1, 37, 3], TYOP [1, 90, 3],
   TYOP [1, 65, 3], TYOP [1, 92, 3], TYOP [1, 31, 3], TYOP [1, 94, 3],
   TYOP [1, 41, 3], TYOP [1, 96, 3], TYOP [1, 64, 3], TYOP [1, 98, 3],
   TYOP [1, 18, 3], TYOP [1, 100, 3], TYOP [1, 44, 3], TYOP [1, 102, 3],
   TYOP [1, 62, 3], TYOP [1, 104, 3], TYOP [1, 21, 3], TYOP [1, 106, 3],
   TYOP [1, 57, 3], TYOP [1, 108, 3], TYOP [1, 29, 29], TYOP [1, 29, 110],
   TYOP [3, 35, 3], TYOP [1, 3, 112], TYOP [1, 35, 113], TYOP [3, 4, 3],
   TYOP [1, 3, 115], TYOP [1, 4, 116], TYOP [1, 19, 20], TYOP [1, 4, 118],
   TYOP [1, 40, 55], TYOP [1, 0, 120], TYOP [1, 8, 19], TYOP [1, 12, 122],
   TYOP [3, 5, 3], TYOP [1, 3, 124], TYOP [1, 5, 125], TYOP [1, 3, 3],
   TYOP [1, 3, 127], TYOP [1, 35, 58], TYOP [1, 0, 79], TYOP [1, 58, 76],
   TYOP [1, 40, 77], TYOP [1, 5, 78], TYOP [1, 2, 18], TYOP [1, 29, 3],
   TYOP [1, 29, 135], TYOP [1, 56, 57], TYOP [1, 36, 3], TYOP [1, 138, 3],
   TYOP [1, 75, 3], TYOP [1, 140, 3], TYOP [1, 78, 5], TYOP [1, 5, 6],
   TYOP [1, 3, 143], TYOP [1, 29, 56], TYOP [1, 145, 56],
   TYOP [1, 55, 146], TYOP [1, 29, 147], TYOP [1, 145, 145],
   TYOP [1, 56, 149], TYOP [1, 35, 112], TYOP [1, 151, 58],
   TYOP [1, 4, 115], TYOP [1, 153, 5], TYOP [1, 5, 124], TYOP [1, 155, 78],
   TYOP [1, 35, 76], TYOP [1, 1, 77], TYOP [1, 4, 78], TYOP [1, 58, 58],
   TYOP [1, 58, 160], TYOP [1, 57, 140], TYOP [1, 6, 5]]
  end
  val _ = Theory.incorporate_consts "mmFoundation" tyvector
     [("tt", 2), ("satFun", 13), ("propmm", 14), ("ormm", 16), ("nu", 17),
      ("mu", 17), ("mmsat", 21), ("mmfn", 25), ("mmUpdate", 28),
      ("mmForm_size", 34), ("mmForm_CASE", 51), ("ff", 2), ("extends", 53),
      ("andmm", 16), ("Dia", 54), ("Box", 54)];

  local open SharingTables
  in
  val tmvector = build_term_vector idvector tyvector
  [TMV("'mmForm'", 57), TMV("A", 58), TMV("A'", 58), TMV("Actions", 40),
   TMV("B", 58), TMV("B'", 58), TMV("E", 4), TMV("E", 5), TMV("E'", 4),
   TMV("E1", 5), TMV("E2", 5), TMV("F", 5), TMV("M", 2), TMV("M'", 2),
   TMV("P", 58), TMV("P", 18), TMV("P", 21), TMV("Q", 58),
   TMV("Trans", 12), TMV("V", 8), TMV("V'", 8), TMV("Y", 0), TMV("Z", 0),
   TMV("a", 1), TMV("a", 0), TMV("a'", 0), TMV("a0", 0), TMV("a0", 40),
   TMV("a0", 2), TMV("a0", 56), TMV("a0'", 0), TMV("a0'", 40),
   TMV("a0'", 2), TMV("a0'", 56), TMV("a1", 2), TMV("a1", 56),
   TMV("a1'", 2), TMV("f", 40), TMV("f", 33), TMV("f", 47), TMV("f", 2),
   TMV("f'", 47), TMV("f0", 35), TMV("f1", 35), TMV("f1", 31),
   TMV("f1", 44), TMV("f1", 2), TMV("f1'", 44), TMV("f2", 47),
   TMV("f2", 44), TMV("f2", 2), TMV("f2'", 44), TMV("f3", 41),
   TMV("f3", 62), TMV("f3'", 41), TMV("f4", 41), TMV("f4", 62),
   TMV("f4'", 41), TMV("f5", 37), TMV("f5", 64), TMV("f5'", 37),
   TMV("f6", 37), TMV("f6", 64), TMV("f6'", 37), TMV("f7", 65),
   TMV("f8", 65), TMV("fn", 36), TMV("form", 2), TMV("form'", 2),
   TMV("m", 2), TMV("m0", 2), TMV("mm", 2), TMV("mmForm", 74),
   TMV("n", 29), TMV("p", 0), TMV("rep", 75), TMV("s", 35), TMV("s", 4),
   TMV("setE", 5), TMV("v", 35), TMV("v", 4), TMV("v'", 35), TMV("v1", 35),
   TMV("v1", 12), TMV("v1'", 35), TMV("v2", 8), TMV("v3", 2), TMV("x", 35),
   TMV("x", 4), TMC(6, 76), TMC(6, 77), TMC(6, 78), TMC(6, 80), TMC(6, 81),
   TMC(6, 83), TMC(6, 85), TMC(6, 86), TMC(6, 88), TMC(6, 89), TMC(6, 91),
   TMC(6, 93), TMC(6, 95), TMC(6, 97), TMC(6, 99), TMC(6, 101),
   TMC(6, 103), TMC(6, 105), TMC(6, 107), TMC(6, 109), TMC(6, 100),
   TMC(6, 108), TMC(7, 111), TMC(8, 114), TMC(8, 117), TMC(8, 119),
   TMC(8, 121), TMC(8, 123), TMC(8, 126), TMC(9, 128), TMC(10, 29),
   TMC(11, 129), TMC(11, 130), TMC(11, 128), TMC(11, 131), TMC(11, 132),
   TMC(11, 133), TMC(11, 134), TMC(11, 136), TMC(11, 137), TMC(12, 128),
   TMC(13, 77), TMC(13, 78), TMC(13, 80), TMC(13, 81), TMC(13, 86),
   TMC(13, 139), TMC(13, 141), TMC(13, 100), TMC(13, 108), TMC(14, 0),
   TMC(14, 40), TMC(15, 142), TMC(16, 142), TMC(17, 110), TMC(18, 56),
   TMC(19, 54), TMC(20, 144), TMC(21, 148), TMC(22, 127), TMC(23, 54),
   TMC(24, 3), TMC(25, 150), TMC(26, 152), TMC(26, 154), TMC(26, 156),
   TMC(27, 157), TMC(27, 158), TMC(27, 159), TMC(28, 161), TMC(28, 143),
   TMC(29, 110), TMC(30, 131), TMC(30, 133), TMC(31, 110), TMC(32, 3),
   TMC(33, 162), TMC(34, 161), TMC(34, 143), TMC(35, 5), TMC(36, 29),
   TMC(37, 128), TMC(38, 16), TMC(39, 53), TMC(40, 2), TMC(41, 163),
   TMC(42, 163), TMC(43, 51), TMC(44, 34), TMC(45, 28), TMC(46, 25),
   TMC(47, 21), TMC(48, 17), TMC(49, 17), TMC(50, 16), TMC(51, 14),
   TMC(52, 13), TMC(53, 2), TMC(54, 127)]
  end
  structure ThmBind = struct
    val DT = Thm.disk_thm
    val read = Term.read_raw tmvector
  end
  fun op mmForm_TY_DEF x = x
    val op mmForm_TY_DEF =
    ThmBind.DT(((("mmFoundation",0),
                [("bool",[14,25,26,52,131,132,137])]),["DISK_THM"]),
               [ThmBind.read"%136%75%165%33%108%0%129%110%33%129%170%128$0@%147%119@%115%139@%140@2%73%144|@3%170%128$0@%147%163%119@2%115%139@%140@2%73%144|@3%170%132%24%128$1@%24%147%163%163%119@3%115$0@%140@2%73%144|@|$0@2|@2%170%138%29%138%35%118%128$2@%29%35%147%163%163%163%119@4%115%139@%140@2%151$1@%151$0@%73%144|@3||$1@$0@3%118$3$1@2$3$0@3|@|@2%170%138%29%138%35%118%128$2@%29%35%147%163%163%163%163%119@5%115%139@%140@2%151$1@%151$0@%73%144|@3||$1@$0@3%118$3$1@2$3$0@3|@|@2%170%133%27%138%35%118%128$2@%27%35%147%163%163%163%163%163%119@6%115%139@$1@2%151$0@%73%144|@2||$1@$0@3$3$0@2|@|@2%170%133%27%138%35%118%128$2@%27%35%147%163%163%163%163%163%163%119@7%115%139@$1@2%151$0@%73%144|@2||$1@$0@3$3$0@2|@|@2%170%132%26%138%35%118%128$2@%26%35%147%163%163%163%163%163%163%163%119@8%115$1@%140@2%151$0@%73%144|@2||$1@$0@3$3$0@2|@|@2%132%26%138%35%118%128$2@%26%35%147%163%163%163%163%163%163%163%163%119@9%115$1@%140@2%151$0@%73%144|@2||$1@$0@3$3$0@2|@|@10$1$0@2|@2$0$1@2|@|@$0@|@"])
  fun op mmForm_case_def x = x
    val op mmForm_case_def =
    ThmBind.DT(((("mmFoundation",20),
                [("bool",[14,25,26,30,52,62,131,132,137,180]),
                 ("ind_type",[33,34]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]),
                 ("pair",[8,9])]),["DISK_THM"]),
               [ThmBind.read"%118%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%186@$8@$7@$6@$5@$4@$3@$2@$1@$0@2$8@|@|@|@|@|@|@|@|@|@2%118%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%173@$8@$7@$6@$5@$4@$3@$2@$1@$0@2$7@|@|@|@|@|@|@|@|@|@2%118%92%24%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%184$9@2$8@$7@$6@$5@$4@$3@$2@$1@$0@2$6$9@2|@|@|@|@|@|@|@|@|@|@2%118%109%28%109%34%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%171$10@$9@2$8@$7@$6@$5@$4@$3@$2@$1@$0@2$5$10@$9@2|@|@|@|@|@|@|@|@|@|@|@2%118%109%28%109%34%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%183$10@$9@2$8@$7@$6@$5@$4@$3@$2@$1@$0@2$4$10@$9@2|@|@|@|@|@|@|@|@|@|@|@2%118%93%27%109%34%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%145$10@$9@2$8@$7@$6@$5@$4@$3@$2@$1@$0@2$3$10@$9@2|@|@|@|@|@|@|@|@|@|@|@2%118%93%27%109%34%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%149$10@$9@2$8@$7@$6@$5@$4@$3@$2@$1@$0@2$2$10@$9@2|@|@|@|@|@|@|@|@|@|@|@2%118%92%26%109%34%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%182$10@$9@2$8@$7@$6@$5@$4@$3@$2@$1@$0@2$1$10@$9@2|@|@|@|@|@|@|@|@|@|@|@2%92%26%109%34%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%120%176%181$10@$9@2$8@$7@$6@$5@$4@$3@$2@$1@$0@2$0$10@$9@2|@|@|@|@|@|@|@|@|@|@|@9"])
  fun op mmForm_size_def x = x
    val op mmForm_size_def =
    ThmBind.DT(((("mmFoundation",21),
                [("bool",[14,25,26,30,52,62,131,132,137,180]),
                 ("ind_type",[33,34]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]),
                 ("pair",[8,9])]),["DISK_THM"]),
               [ThmBind.read"%118%95%38%101%44%127%177$1@$0@%186@2%119@|@|@2%118%95%38%101%44%127%177$1@$0@%173@2%119@|@|@2%118%95%38%101%44%92%24%127%177$2@$1@%184$0@3%111%160%143%169@3$1$0@3|@|@|@2%118%95%38%101%44%109%28%109%34%127%177$3@$2@%171$1@$0@3%111%160%143%169@3%111%177$3@$2@$1@2%177$3@$2@$0@4|@|@|@|@2%118%95%38%101%44%109%28%109%34%127%177$3@$2@%183$1@$0@3%111%160%143%169@3%111%177$3@$2@$1@2%177$3@$2@$0@4|@|@|@|@2%118%95%38%101%44%93%27%109%34%127%177$3@$2@%145$1@$0@3%111%160%143%169@3%177$3@$2@$0@3|@|@|@|@2%118%95%38%101%44%93%27%109%34%127%177$3@$2@%149$1@$0@3%111%160%143%169@3%177$3@$2@$0@3|@|@|@|@2%118%95%38%101%44%92%26%109%34%127%177$3@$2@%182$1@$0@3%111%160%143%169@3%111$2$1@2%177$3@$2@$0@4|@|@|@|@2%95%38%101%44%92%26%109%34%127%177$3@$2@%181$1@$0@3%111%160%143%169@3%111$2$1@2%177$3@$2@$0@4|@|@|@|@9"])
  fun op mmUpdate_def x = x
    val op mmUpdate_def =
    ThmBind.DT(((("mmFoundation",29),[]),[]),
               [ThmBind.read"%92%22%98%19%96%7%92%21%125%178$3@$2@$1@$0@2%146%121$0@$3@2$1@$2$0@3|@|@|@|@"])
  fun op mmfn_def x = x
    val op mmfn_def =
    ThmBind.DT(((("mmFoundation",34),[]),[]),
               [ThmBind.read"%94%18%109%40%96%7%98%19%125%179$3@$2@$1@$0@2%153%77%113$0@%118%157$0@$2@2%180%114$0@%116$4@$1@3$3@3|@2|@|@|@|@"])
  fun op extends_def x = x
    val op extends_def =
    ThmBind.DT(((("mmFoundation",35),[]),[]),
               [ThmBind.read"%98%19%98%20%122%172$1@$0@2%92%22%162$2$0@2$1$0@2|@2|@|@"])
  fun op satFun_def x = x
    val op satFun_def =
    ThmBind.DT(((("mmFoundation",52),[]),[]),
               [ThmBind.read"%94%18%92%22%98%19%109%67%96%7%125%185$4@$3@$2@$1@$0@2%179$4@$1@%168@%178$3@$2@$0@3|@|@|@|@|@"])
  fun op datatype_mmForm x = x
    val op datatype_mmForm =
    ThmBind.DT(((("mmFoundation",22),[("bool",[25,170])]),["DISK_THM"]),
               [ThmBind.read"%148%72%186@%173@%184@%171@%183@%145@%149@%182@%181@2"])
  fun op mmForm_11 x = x
    val op mmForm_11 =
    ThmBind.DT(((("mmFoundation",23),
                [("bool",[14,25,26,30,50,52,55,62,131,132,137,180]),
                 ("ind_type",[33,34]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]),
                 ("pair",[8,9])]),["DISK_THM"]),
               [ThmBind.read"%118%92%24%92%25%122%126%184$1@2%184$0@3%121$1@$0@2|@|@2%118%109%28%109%34%109%32%109%36%122%126%171$3@$2@2%171$1@$0@3%118%126$3@$1@2%126$2@$0@3|@|@|@|@2%118%109%28%109%34%109%32%109%36%122%126%183$3@$2@2%183$1@$0@3%118%126$3@$1@2%126$2@$0@3|@|@|@|@2%118%93%27%109%34%93%31%109%36%122%126%145$3@$2@2%145$1@$0@3%118%124$3@$1@2%126$2@$0@3|@|@|@|@2%118%93%27%109%34%93%31%109%36%122%126%149$3@$2@2%149$1@$0@3%118%124$3@$1@2%126$2@$0@3|@|@|@|@2%118%92%26%109%34%92%30%109%36%122%126%182$3@$2@2%182$1@$0@3%118%121$3@$1@2%126$2@$0@3|@|@|@|@2%92%26%109%34%92%30%109%36%122%126%181$3@$2@2%181$1@$0@3%118%121$3@$1@2%126$2@$0@3|@|@|@|@7"])
  fun op mmForm_distinct x = x
    val op mmForm_distinct =
    ThmBind.DT(((("mmFoundation",24),
                [("bool",
                 [14,25,26,30,35,46,50,52,53,55,62,131,132,137,180]),
                 ("ind_type",[33,34]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]),
                 ("pair",[8,9])]),["DISK_THM"]),
               [ThmBind.read"%118%187%126%186@%173@3%118%92%24%187%126%186@%184$0@3|@2%118%109%34%109%28%187%126%186@%171$0@$1@3|@|@2%118%109%34%109%28%187%126%186@%183$0@$1@3|@|@2%118%109%34%93%27%187%126%186@%145$0@$1@3|@|@2%118%109%34%93%27%187%126%186@%149$0@$1@3|@|@2%118%109%34%92%26%187%126%186@%182$0@$1@3|@|@2%118%109%34%92%26%187%126%186@%181$0@$1@3|@|@2%118%92%24%187%126%173@%184$0@3|@2%118%109%34%109%28%187%126%173@%171$0@$1@3|@|@2%118%109%34%109%28%187%126%173@%183$0@$1@3|@|@2%118%109%34%93%27%187%126%173@%145$0@$1@3|@|@2%118%109%34%93%27%187%126%173@%149$0@$1@3|@|@2%118%109%34%92%26%187%126%173@%182$0@$1@3|@|@2%118%109%34%92%26%187%126%173@%181$0@$1@3|@|@2%118%109%34%109%28%92%24%187%126%184$0@2%171$1@$2@3|@|@|@2%118%109%34%109%28%92%24%187%126%184$0@2%183$1@$2@3|@|@|@2%118%109%34%93%27%92%24%187%126%184$0@2%145$1@$2@3|@|@|@2%118%109%34%93%27%92%24%187%126%184$0@2%149$1@$2@3|@|@|@2%118%109%34%92%26%92%24%187%126%184$0@2%182$1@$2@3|@|@|@2%118%109%34%92%26%92%24%187%126%184$0@2%181$1@$2@3|@|@|@2%118%109%36%109%34%109%32%109%28%187%126%171$0@$2@2%183$1@$3@3|@|@|@|@2%118%109%36%109%34%93%31%109%28%187%126%171$0@$2@2%145$1@$3@3|@|@|@|@2%118%109%36%109%34%93%31%109%28%187%126%171$0@$2@2%149$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%109%28%187%126%171$0@$2@2%182$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%109%28%187%126%171$0@$2@2%181$1@$3@3|@|@|@|@2%118%109%36%109%34%93%31%109%28%187%126%183$0@$2@2%145$1@$3@3|@|@|@|@2%118%109%36%109%34%93%31%109%28%187%126%183$0@$2@2%149$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%109%28%187%126%183$0@$2@2%182$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%109%28%187%126%183$0@$2@2%181$1@$3@3|@|@|@|@2%118%109%36%109%34%93%31%93%27%187%126%145$0@$2@2%149$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%93%27%187%126%145$0@$2@2%182$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%93%27%187%126%145$0@$2@2%181$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%93%27%187%126%149$0@$2@2%182$1@$3@3|@|@|@|@2%118%109%36%109%34%92%30%93%27%187%126%149$0@$2@2%181$1@$3@3|@|@|@|@2%109%36%109%34%92%30%92%26%187%126%182$0@$2@2%181$1@$3@3|@|@|@|@36"])
  fun op mmForm_case_cong x = x
    val op mmForm_case_cong =
    ThmBind.DT(((("mmFoundation",25),
                [("bool",[14,25,26,52,131,132,137,180]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,
                  20])]),["DISK_THM"]),
               [ThmBind.read"%109%12%109%13%89%79%89%82%97%39%105%45%105%49%102%52%102%55%99%58%99%61%129%118%126$10@$9@2%118%129%126$9@%186@2%120$8@%81@3%118%129%126$9@%173@2%120$7@%84@3%118%92%24%129%126$10@%184$0@3%120$7$0@2%41$0@3|@2%118%109%28%109%34%129%126$11@%171$1@$0@3%120$7$1@$0@2%47$1@$0@3|@|@2%118%109%28%109%34%129%126$11@%183$1@$0@3%120$6$1@$0@2%51$1@$0@3|@|@2%118%93%27%109%34%129%126$11@%145$1@$0@3%120$5$1@$0@2%54$1@$0@3|@|@2%118%93%27%109%34%129%126$11@%149$1@$0@3%120$4$1@$0@2%57$1@$0@3|@|@2%118%92%26%109%34%129%126$11@%182$1@$0@3%120$3$1@$0@2%60$1@$0@3|@|@2%92%26%109%34%129%126$11@%181$1@$0@3%120$2$1@$0@2%63$1@$0@3|@|@11%120%176$10@$8@$7@$6@$5@$4@$3@$2@$1@$0@2%176$9@%81@%84@%41@%47@%51@%54@%57@%60@%63@3|@|@|@|@|@|@|@|@|@|@|@"])
  fun op mmForm_nchotomy x = x
    val op mmForm_nchotomy =
    ThmBind.DT(((("mmFoundation",26),
                [("bool",[14,25,26,52,131,132,137,180]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,
                  19])]),["DISK_THM"]),
               [ThmBind.read"%109%71%170%126$0@%186@2%170%126$0@%173@2%170%132%74%126$1@%184$0@2|@2%170%137%69%137%70%126$2@%171$1@$0@2|@|@2%170%137%69%137%70%126$2@%183$1@$0@2|@|@2%170%133%37%137%69%126$2@%145$1@$0@2|@|@2%170%133%37%137%69%126$2@%149$1@$0@2|@|@2%170%132%74%137%69%126$2@%182$1@$0@2|@|@2%132%74%137%69%126$2@%181$1@$0@2|@|@9|@"])
  fun op mmForm_Axiom x = x
    val op mmForm_Axiom =
    ThmBind.DT(((("mmFoundation",27),
                [("bool",[14,25,26,30,52,62,131,132,137,180]),
                 ("ind_type",[33,34]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]),
                 ("pair",[8,9])]),["DISK_THM"]),
               [ThmBind.read"%89%42%89%43%97%48%106%53%106%56%103%59%103%62%100%64%100%65%135%66%118%120$0%186@2$9@2%118%120$0%173@2$8@2%118%92%24%120$1%184$0@3$8$0@2|@2%118%109%28%109%34%120$2%171$1@$0@3$8$1@$0@$2$1@2$2$0@3|@|@2%118%109%28%109%34%120$2%183$1@$0@3$7$1@$0@$2$1@2$2$0@3|@|@2%118%93%27%109%34%120$2%145$1@$0@3$6$1@$0@$2$0@3|@|@2%118%93%27%109%34%120$2%149$1@$0@3$5$1@$0@$2$0@3|@|@2%118%92%26%109%34%120$2%182$1@$0@3$4$1@$0@$2$0@3|@|@2%92%26%109%34%120$2%181$1@$0@3$3$1@$0@$2$0@3|@|@9|@|@|@|@|@|@|@|@|@|@"])
  fun op mmForm_induction x = x
    val op mmForm_induction =
    ThmBind.DT(((("mmFoundation",28),
                [("bool",[14,25,26,52,131,132,137]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,
                  19])]),["DISK_THM"]),
               [ThmBind.read"%104%15%129%118$0%186@2%118$0%173@2%118%92%74$1%184$0@2|@2%118%109%69%109%70%129%118$2$1@2$2$0@3$2%171$1@$0@3|@|@2%118%109%69%109%70%129%118$2$1@2$2$0@3$2%183$1@$0@3|@|@2%118%109%69%129$1$0@2%93%37$2%145$0@$1@2|@2|@2%118%109%69%129$1$0@2%93%37$2%149$0@$1@2|@2|@2%118%109%69%129$1$0@2%92%74$2%182$0@$1@2|@2|@2%109%69%129$1$0@2%92%74$2%181$0@$1@2|@2|@10%109%69$1$0@|@2|@"])
  fun op mmsat_ind x = x
    val op mmsat_ind =
    ThmBind.DT(((("mmFoundation",32),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [14,25,26,27,35,50,51,52,53,57,62,92,95,103,104,106,123,
                  131,132,137,180]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21]),
                 ("numeral",[3,7,8]),("pair",[5,7,9,16]),("prim_rec",[42]),
                 ("relation",[107,119,121]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%107%16%129%118%91%6%94%18%98%19$3%114$2@%116$1@$0@3%186@|@|@|@2%118%91%6%94%18%98%19$3%114$2@%116$1@$0@3%173@|@|@|@2%118%91%6%94%18%98%19%92%22$4%114$3@%116$2@$1@3%184$0@2|@|@|@|@2%118%91%6%94%18%98%19%109%46%109%50%129%118$5%114$4@%116$3@$2@3$1@2$5%114$4@%116$3@$2@3$0@3$5%114$4@%116$3@$2@3%171$1@$0@3|@|@|@|@|@2%118%91%6%94%18%98%19%109%46%109%50%129%118$5%114$4@%116$3@$2@3$1@2$5%114$4@%116$3@$2@3$0@3$5%114$4@%116$3@$2@3%183$1@$0@3|@|@|@|@|@2%118%91%6%94%18%98%19%93%3%109%40%129%90%23%91%8%129%118$5$1@$6@$0@2%156$1@$3@3$7%114$0@%116$5@$4@3$2@2|@|@2$5%114$4@%116$3@$2@3%145$1@$0@3|@|@|@|@|@2%118%91%6%94%18%98%19%93%3%109%40%129%91%8$6%114$0@%116$4@$3@3$1@|@2$5%114$4@%116$3@$2@3%149$1@$0@3|@|@|@|@|@2%118%91%6%94%18%98%19%92%22%109%40%129%91%8%96%78%129%157$1@$0@2$7%114$1@%116$5@%178$3@$4@$0@4$2@2|@|@2$5%114$4@%116$3@$2@3%182$1@$0@3|@|@|@|@|@2%91%6%94%18%98%19%92%22%109%40%129%96%78%91%8%129%187%157$6@$1@3$7%114$0@%116$5@%178$3@$4@$1@4$2@2|@|@2$5%114$4@%116$3@$2@3%181$1@$0@3|@|@|@|@|@10%91%80%94%83%98%85%109%86$4%114$3@%116$2@$1@3$0@|@|@|@|@2|@"])
  fun op mmsat_def x = x
    val op mmsat_def =
    ThmBind.DT(((("mmFoundation",33),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,35,50,51,52,53,57,62,92,95,103,104,106,123]),
                 ("combin",[19]),("mmFoundation",[20,21,30,31]),
                 ("numeral",[3,7,8]),("pair",[7,9,16,49]),
                 ("prim_rec",[42]),("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%118%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%186@2%164@|@|@|@2%118%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%173@2%150@|@|@|@2%118%92%22%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%184$3@3%157$0@$2$3@3|@|@|@|@2%118%109%50%109%46%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%171$3@$4@3%118%180%114$0@%116$1@$2@3$3@2%180%114$0@%116$1@$2@3$4@3|@|@|@|@|@2%118%109%50%109%46%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%183$3@$4@3%170%180%114$0@%116$1@$2@3$3@2%180%114$0@%116$1@$2@3$4@3|@|@|@|@|@2%118%109%40%98%19%94%18%91%6%93%3%122%180%114$1@%116$2@$3@3%145$0@$4@3%91%8%90%23%129$4$0@$3@$1@2%129%156$0@$2@2%180%114$1@%116$4@$5@3$6@3|@|@2|@|@|@|@|@2%118%109%40%98%19%94%18%91%6%93%3%122%180%114$1@%116$2@$3@3%149$0@$4@3%131%8%130%23%118$4$0@$3@$1@2%118%156$0@$2@2%180%114$1@%116$4@$5@3$6@3|@|@2|@|@|@|@|@2%118%109%40%92%22%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%182$3@$4@3%134%78%118%157$1@$0@2%91%8%129%157$0@$1@2%180%114$0@%116$3@%178$5@$4@$1@4$6@2|@2|@2|@|@|@|@|@2%109%40%92%22%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%181$3@$4@3%96%78%129%187%157$1@$0@3%131%8%118%180%114$0@%116$3@%178$5@$4@$1@4$6@2%187%157$0@$1@3|@2|@2|@|@|@|@|@9"])
  fun op IN_CLAUSES x = x
    val op IN_CLAUSES =
    ThmBind.DT(((("mmFoundation",36),
                [("bool",[18,25,50,55])]),["DISK_THM"]),
               [ThmBind.read"%118%123%152%76%112$0@%155$0@%87%170%14$0@2%17$0@2|@2|@2%152%76%112$0@%170%155$0@%87%14$0@|@2%155$0@%87%17$0@|@3|@3%123%152%76%112$0@%155$0@%87%118%14$0@2%17$0@2|@2|@2%152%76%112$0@%118%155$0@%87%14$0@|@2%155$0@%87%17$0@|@3|@3"])
  fun op IN_UNION_INTER_CLAUSES x = x
    val op IN_UNION_INTER_CLAUSES =
    ThmBind.DT(((("mmFoundation",37),
                [("bool",[18,25,50,55,57]),
                 ("pred_set",[47,59])]),["DISK_THM"]),
               [ThmBind.read"%118%123%152%76%112$0@%155$0@%87%118%14$0@2%17$0@2|@2|@2%158%87%14$0@|@%87%17$0@|@3%123%152%76%112$0@%155$0@%87%170%14$0@2%17$0@2|@2|@2%166%87%14$0@|@%87%17$0@|@3"])
  fun op MONOTONE_INTER x = x
    val op MONOTONE_INTER =
    ThmBind.DT(((("mmFoundation",38),[("pred_set",[28,60])]),["DISK_THM"]),
               [ThmBind.read"%129%161%1@%2@2%129%161%4@%5@2%161%158%1@%4@2%158%2@%5@4"])
  fun op MONOTONE_UNION x = x
    val op MONOTONE_UNION =
    ThmBind.DT(((("mmFoundation",39),
                [("bool",[25,51,62]),("pred_set",[28,48])]),["DISK_THM"]),
               [ThmBind.read"%129%161%1@%2@2%129%161%4@%5@2%161%166%1@%4@2%166%2@%5@4"])
  fun op mmsat_IN_CLAUSES x = x
    val op mmsat_IN_CLAUSES =
    ThmBind.DT(((("mmFoundation",40),
                [("bool",[18,25,35,50,55])]),["DISK_THM"]),
               [ThmBind.read"%118%91%77%109%67%98%19%94%18%125%153%77%113$0@%180%114$0@%116$1@$2@3$3@2|@2%153%77%113$0@%157$0@%88%180%114$0@%116$2@$3@3$4@|@2|@2|@|@|@|@2%118%91%77%109%46%109%50%98%19%125%153%77%113$0@%118%180%114$0@%116%18@$1@3$3@2%180%114$0@%116%18@$1@3$2@3|@2%153%77%113$0@%118%157$0@%88%180%114$0@%116%18@$2@3$4@|@2%157$0@%88%180%114$0@%116%18@$2@3$3@|@3|@2|@|@|@|@2%91%77%109%46%109%50%98%19%125%153%77%113$0@%170%180%114$0@%116%18@$1@3$3@2%180%114$0@%116%18@$1@3$2@3|@2%153%77%113$0@%170%157$0@%88%180%114$0@%116%18@$2@3$4@|@2%157$0@%88%180%114$0@%116%18@$2@3$3@|@3|@2|@|@|@|@3"])
  fun op mmfn_CLAUSES x = x
    val op mmfn_CLAUSES =
    ThmBind.DT(((("mmFoundation",41),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,18,25,35,50,51,52,53,55,57,62,92,95,103,104,106,123]),
                 ("combin",[19]),("mmFoundation",[20,21,30,31,34]),
                 ("numeral",[3,7,8]),("pair",[7,9,16,49]),
                 ("pred_set",[22,47,59,455]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%118%109%46%109%50%98%19%94%18%125%179$0@%171$3@$2@2%168@$1@2%159%179$0@$3@%168@$1@2%179$0@$2@%168@$1@3|@|@|@|@2%109%46%109%50%98%19%94%18%125%179$0@%183$3@$2@2%168@$1@2%167%179$0@$3@%168@$1@2%179$0@$2@%168@$1@3|@|@|@|@2"])
  fun op mmfn_tt_ff_CLAUSES x = x
    val op mmfn_tt_ff_CLAUSES =
    ThmBind.DT(((("mmFoundation",42),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,35,50,51,52,53,57,62,92,95,103,104,106,123]),
                 ("combin",[19]),("mmFoundation",[20,21,30,31,34]),
                 ("numeral",[3,7,8]),("pair",[7,9,16,49]),
                 ("pred_set",[22,31]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%118%94%18%98%19%98%20%162%179$2@%186@%168@$1@2%179$2@%186@%168@$0@2|@|@|@2%94%18%98%19%98%20%162%179$2@%173@%168@$1@2%179$2@%173@%168@$0@2|@|@|@2"])
  fun op mmfn_MONOTONIC_propvar x = x
    val op mmfn_MONOTONIC_propvar =
    ThmBind.DT(((("mmFoundation",43),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,18,25,35,50,51,52,53,57,62,92,95,103,104,106,123]),
                 ("combin",[19]),("mmFoundation",[20,21,30,31,34,35]),
                 ("numeral",[3,7,8]),("pair",[7,9,16,49]),
                 ("pred_set",[8,22]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%92%22%98%19%98%20%129%172$1@$0@2%162%179%18@%184$2@2%168@$1@2%179%18@%184$2@2%168@$0@3|@|@|@"])
  fun op mmfn_MONOTONIC_andmm x = x
    val op mmfn_MONOTONIC_andmm =
    ThmBind.DT(((("mmFoundation",44),[("pred_set",[28,60])]),["DISK_THM"]),
               [ThmBind.read"%129%98%19%98%20%129%172$1@$0@2%162%179%18@%67@%168@$1@2%179%18@%67@%168@$0@3|@|@2%129%98%19%98%20%129%172$1@$0@2%162%179%18@%68@%168@$1@2%179%18@%68@%168@$0@3|@|@2%129%172%19@%20@2%162%159%179%18@%67@%168@%19@2%179%18@%68@%168@%19@3%159%179%18@%67@%168@%20@2%179%18@%68@%168@%20@6"])
  fun op mmfn_MONOTONIC_ormm x = x
    val op mmfn_MONOTONIC_ormm =
    ThmBind.DT(((("mmFoundation",45),
                [("bool",[25,51,62]),("pred_set",[28,48])]),["DISK_THM"]),
               [ThmBind.read"%129%98%19%98%20%129%172$1@$0@2%162%179%18@%67@%168@$1@2%179%18@%67@%168@$0@3|@|@2%129%98%19%98%20%129%172$1@$0@2%162%179%18@%68@%168@$1@2%179%18@%68@%168@$0@3|@|@2%129%172%19@%20@2%162%167%179%18@%67@%168@%19@2%179%18@%68@%168@%19@3%167%179%18@%67@%168@%20@2%179%18@%68@%168@%20@6"])
  fun op mmfn_MONOTONIC_Box x = x
    val op mmfn_MONOTONIC_Box =
    ThmBind.DT(((("mmFoundation",46),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,26,35,50,51,52,53,57,62,92,95,103,104,106,123]),
                 ("combin",[19]),("mmFoundation",[20,21,30,31,34]),
                 ("numeral",[3,7,8]),("pair",[3,7,9,16,49]),
                 ("pred_set",[6,22,28]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%129%98%19%98%20%129%172$1@$0@2%162%179%18@%67@%168@$1@2%179%18@%67@%168@$0@3|@|@2%129%172%19@%20@2%162%179%18@%145%37@%67@2%168@%19@2%179%18@%145%37@%67@2%168@%20@4"])
  fun op mmfn_MONOTONIC_Dia x = x
    val op mmfn_MONOTONIC_Dia =
    ThmBind.DT(((("mmFoundation",47),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,26,35,50,51,52,53,57,62,92,95,103,104,106,123]),
                 ("combin",[19]),("mmFoundation",[20,21,30,31,34]),
                 ("numeral",[3,7,8]),("pair",[3,7,9,16,49]),
                 ("pred_set",[6,22,28]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%129%98%19%98%20%129%172$1@$0@2%162%179%18@%67@%168@$1@2%179%18@%67@%168@$0@3|@|@2%129%172%19@%20@2%162%179%18@%149%37@%67@2%168@%19@2%179%18@%149%37@%67@2%168@%20@4"])
  fun op mmUpdate_MONOTONIC x = x
    val op mmUpdate_MONOTONIC =
    ThmBind.DT(((("mmFoundation",48),
                [("bool",[25,26,27,29,52,62,63]),("mmFoundation",[29,35]),
                 ("pred_set",[0,28])]),["DISK_THM"]),
               [ThmBind.read"%118%98%19%92%22%96%7%96%11%129%162$1@$0@2%172%178$2@$3@$1@2%178$2@$3@$0@3|@|@|@|@2%98%19%98%20%92%22%96%7%129%172$3@$2@2%172%178$1@$3@$0@2%178$1@$2@$0@3|@|@|@|@2"])
  fun op mmfn_MONOTONIC_nu x = x
    val op mmfn_MONOTONIC_nu =
    ThmBind.DT(((("mmFoundation",49),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,26,27,29,35,46,47,50,51,52,53,57,62,63,92,93,95,
                  103,104,106,123]),("combin",[19]),
                 ("mmFoundation",[20,21,29,30,31,34,35]),
                 ("numeral",[3,7,8]),("pair",[3,7,9,16,49]),
                 ("pred_set",[0,6,22,28]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%129%98%19%98%20%129%172$1@$0@2%162%179%18@%67@%168@$1@2%179%18@%67@%168@$0@3|@|@2%129%172%19@%20@2%162%179%18@%182%74@%67@2%168@%19@2%179%18@%182%74@%67@2%168@%20@4"])
  fun op mmfn_MONOTONIC_mu x = x
    val op mmfn_MONOTONIC_mu =
    ThmBind.DT(((("mmFoundation",50),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,26,27,29,35,46,47,50,51,52,53,57,62,63,70,71,75,76,
                  77,79,80,83,92,93,95,103,104,106,123,145]),
                 ("combin",[19]),("mmFoundation",[20,21,29,30,31,34,35]),
                 ("numeral",[3,7,8]),("pair",[3,7,9,16,49]),
                 ("pred_set",[0,6,22,28]),("prim_rec",[42]),
                 ("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%129%98%19%98%20%129%172$1@$0@2%162%179%18@%67@%168@$1@2%179%18@%67@%168@$0@3|@|@2%129%172%19@%20@2%162%179%18@%181%74@%67@2%168@%19@2%179%18@%181%74@%67@2%168@%20@4"])
  fun op mmfn_MONOTONIC x = x
    val op mmfn_MONOTONIC =
    ThmBind.DT(((("mmFoundation",51),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [14,15,18,25,26,27,29,35,42,46,47,50,51,52,53,55,57,62,63,
                  70,71,75,76,77,79,80,83,92,93,95,103,104,106,123,131,132,
                  137,145]),("combin",[19]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,29,
                  30,31,34,35]),("numeral",[3,7,8]),("pair",[3,7,9,16,49]),
                 ("pred_set",[0,6,8,22,28,31,47,48,59,60,455]),
                 ("prim_rec",[42]),("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%109%67%98%19%98%20%129%172$1@$0@2%162%179%18@$2@%168@$1@2%179%18@$2@%168@$0@3|@|@|@"])
  fun op satFun_MONOTONIC x = x
    val op satFun_MONOTONIC =
    ThmBind.DT(((("mmFoundation",53),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [14,15,18,25,26,27,29,35,42,46,47,50,51,52,53,55,57,62,63,
                  70,71,75,76,77,79,80,83,92,93,95,103,104,106,123,131,132,
                  137,145]),("combin",[19]),
                 ("mmFoundation",
                 [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,29,
                  30,31,34,35,52]),("numeral",[3,7,8]),
                 ("pair",[3,7,9,16,49]),
                 ("pred_set",[0,6,8,22,28,31,47,48,59,60,455]),
                 ("prim_rec",[42]),("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,14,15])]),["DISK_THM"]),
               [ThmBind.read"%98%19%94%18%92%22%109%67%96%9%96%10%129%162$1@$0@2%162%185$4@$3@$5@$2@$1@2%185$4@$3@$5@$2@$0@3|@|@|@|@|@|@"])
  fun op satFun_gfp_thm x = x
    val op satFun_gfp_thm =
    ThmBind.DT(((("mmFoundation",54),
                [("bool",[25,55]),("fixedPoint",[2])]),["DISK_THM"]),
               [ThmBind.read"%125%174%185%18@%22@%19@%40@3%142%154%78%117$0@%162$0@%185%18@%22@%19@%40@$0@3|@3"])
  fun op mmsat_nu_gfp x = x
    val op mmsat_nu_gfp =
    ThmBind.DT(((("mmFoundation",55),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,26,35,50,51,52,53,57,62,92,95,103,104,106,123]),
                 ("combin",[19]),("fixedPoint",[2]),
                 ("mmFoundation",[20,21,30,31,34,52]),("numeral",[3,7,8]),
                 ("pair",[3,7,9,16,49]),("pred_set",[6,22,28,328]),
                 ("prim_rec",[42]),("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%109%40%92%22%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%182$3@$4@3%157$0@%174%185$1@$3@$2@$4@4|@|@|@|@|@"])
  fun op satFun_lfp_thm x = x
    val op satFun_lfp_thm =
    ThmBind.DT(((("mmFoundation",56),
                [("bool",[25,55]),("fixedPoint",[1])]),["DISK_THM"]),
               [ThmBind.read"%125%175%185%18@%22@%19@%40@3%141%154%78%117$0@%162%185%18@%22@%19@%40@$0@2$0@2|@3"])
  fun op mmsat_mu_lfp x = x
    val op mmsat_mu_lfp =
    ThmBind.DT(((("mmFoundation",57),
                [("arithmetic",[22,24,25,26,27,41,46,59,73,95,179,186]),
                 ("bool",
                 [15,25,26,35,50,51,52,53,57,62,92,95,100,103,104,106,
                  123]),("combin",[19]),("fixedPoint",[1]),
                 ("mmFoundation",[20,21,30,31,34,52]),("numeral",[3,7,8]),
                 ("pair",[3,7,9,16,49]),("pred_set",[6,22,28,346]),
                 ("prim_rec",[42]),("relation",[119,121,127,132]),
                 ("sat",[1,3,5,6,7,11,12,13,15])]),["DISK_THM"]),
               [ThmBind.read"%109%40%92%22%98%19%94%18%91%6%122%180%114$0@%116$1@$2@3%181$3@$4@3%157$0@%175%185$1@$3@$2@$4@4|@|@|@|@|@"])

  val _ = DB.bindl "mmFoundation"
  [("mmForm_TY_DEF",mmForm_TY_DEF,DB.Def),
   ("mmForm_case_def",mmForm_case_def,DB.Def),
   ("mmForm_size_def",mmForm_size_def,DB.Def),
   ("mmUpdate_def",mmUpdate_def,DB.Def), ("mmfn_def",mmfn_def,DB.Def),
   ("extends_def",extends_def,DB.Def), ("satFun_def",satFun_def,DB.Def),
   ("datatype_mmForm",datatype_mmForm,DB.Thm),
   ("mmForm_11",mmForm_11,DB.Thm),
   ("mmForm_distinct",mmForm_distinct,DB.Thm),
   ("mmForm_case_cong",mmForm_case_cong,DB.Thm),
   ("mmForm_nchotomy",mmForm_nchotomy,DB.Thm),
   ("mmForm_Axiom",mmForm_Axiom,DB.Thm),
   ("mmForm_induction",mmForm_induction,DB.Thm),
   ("mmsat_ind",mmsat_ind,DB.Thm), ("mmsat_def",mmsat_def,DB.Thm),
   ("IN_CLAUSES",IN_CLAUSES,DB.Thm),
   ("IN_UNION_INTER_CLAUSES",IN_UNION_INTER_CLAUSES,DB.Thm),
   ("MONOTONE_INTER",MONOTONE_INTER,DB.Thm),
   ("MONOTONE_UNION",MONOTONE_UNION,DB.Thm),
   ("mmsat_IN_CLAUSES",mmsat_IN_CLAUSES,DB.Thm),
   ("mmfn_CLAUSES",mmfn_CLAUSES,DB.Thm),
   ("mmfn_tt_ff_CLAUSES",mmfn_tt_ff_CLAUSES,DB.Thm),
   ("mmfn_MONOTONIC_propvar",mmfn_MONOTONIC_propvar,DB.Thm),
   ("mmfn_MONOTONIC_andmm",mmfn_MONOTONIC_andmm,DB.Thm),
   ("mmfn_MONOTONIC_ormm",mmfn_MONOTONIC_ormm,DB.Thm),
   ("mmfn_MONOTONIC_Box",mmfn_MONOTONIC_Box,DB.Thm),
   ("mmfn_MONOTONIC_Dia",mmfn_MONOTONIC_Dia,DB.Thm),
   ("mmUpdate_MONOTONIC",mmUpdate_MONOTONIC,DB.Thm),
   ("mmfn_MONOTONIC_nu",mmfn_MONOTONIC_nu,DB.Thm),
   ("mmfn_MONOTONIC_mu",mmfn_MONOTONIC_mu,DB.Thm),
   ("mmfn_MONOTONIC",mmfn_MONOTONIC,DB.Thm),
   ("satFun_MONOTONIC",satFun_MONOTONIC,DB.Thm),
   ("satFun_gfp_thm",satFun_gfp_thm,DB.Thm),
   ("mmsat_nu_gfp",mmsat_nu_gfp,DB.Thm),
   ("satFun_lfp_thm",satFun_lfp_thm,DB.Thm),
   ("mmsat_mu_lfp",mmsat_mu_lfp,DB.Thm)]

  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "mmFoundation",
    thydataty = "compute",
    read = ThmBind.read,
    data =
        "mmFoundation.mmUpdate_def mmFoundation.satFun_def mmFoundation.mmfn_def mmFoundation.extends_def mmFoundation.mmsat_def"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "mmFoundation",
    thydataty = "TypeGrammarDeltas",
    read = ThmBind.read,
    data = "NTY12.mmFoundation,6.mmForm"
  }
  val _ = Theory.LoadableThyData.temp_encoded_update {
    thy = "mmFoundation",
    thydataty = "TermGrammarDeltas",
    read = ThmBind.read,
    data =
        "OO2.tt4.%186OO2.ff4.%173OO6.propmm4.%184OO5.andmm4.%171OO4.ormm4.%183OO3.Box4.%145OO3.Dia4.%149OO2.nu4.%182OO2.mu4.%181OO11.mmForm_CASE4.%176OO11.mmForm_size4.%177OO4.case4.%176RMT5.andmmG5.andmmOCI0.IR580.H1.RK5.andmmS1.0.XRMT4.ormmG4.ormmOCI0.IR570.H1.RK4.ormmS1.0.XOO8.mmUpdate4.%178RMT5.mmsatG5.mmsatOCI0.IR540.H1.RK5.mmsatS1.0.XOO5.mmsat4.%180OO4.mmfn4.%179OO7.extends4.%172OO6.satFun4.%185"
  }
  local open GrammarSpecials Parse
    fun UTOFF f = Feedback.trace("Parse.unicode_trace_off_complaints",0)f
  in
  val mmFoundation_grammars = merge_grammars ["fixedPoint", "indexedLists",
                                              "patternMatches"]
  local
  val (tyUDs, tmUDs) = GrammarDeltas.thy_deltas{thyname="mmFoundation"}
  val addtmUDs = term_grammar.add_deltas tmUDs
  val addtyUDs = type_grammar.apply_deltas tyUDs
  in
  val mmFoundation_grammars = 
    Portable.## (addtyUDs,addtmUDs) mmFoundation_grammars
  val _ = Parse.grammarDB_insert("mmFoundation",mmFoundation_grammars)
  val _ = Parse.temp_set_grammars (addtyUDs (Parse.type_grammar()), addtmUDs (Parse.term_grammar()))
  end (* addUDs local *)
  end


  val _ =
    TypeBase.write [
      let
        open TypeBasePure
        val tyinfo0 = mk_datatype_info
          {ax=ORIG mmForm_Axiom,
           case_def=mmForm_case_def,
           case_cong=mmForm_case_cong,
           induction=ORIG mmForm_induction,
           nchotomy=mmForm_nchotomy,
           size=SOME(Parse.Term`(mmFoundation$mmForm_size) :('action -> num$num) ->
('propvar -> num$num) ->
('action, 'propvar) mmFoundation$mmForm -> num$num`,
                     ORIG mmForm_size_def),
           encode = NONE,
           lift=NONE,
           one_one=SOME mmForm_11,
           distinct=SOME mmForm_distinct,
           fields=let fun T t s A = mk_thy_type{Thy=t,Tyop=s,Args=A}
    val U = mk_vartype
in
[] end,
           accessors=[],
           updates=[],
           recognizers=[],
           destructors=[]}
        val tyinfo0 = tyinfo0
        val () = computeLib.write_datatype_info tyinfo0
      in
        tyinfo0
      end
    ];

val _ = if !Globals.print_thy_loads then TextIO.print "done\n" else ()
val _ = Theory.load_complete "mmFoundation"
end
